{
  "openapi": "3.0.1",
  "info": {
    "title": "User API",
    "description": "User API - For creating and updating users.",
    "contact": {
      "name": "Acos AS",
      "url": "http://wwww.acos.no/",
      "email": "utvikling@acos.no"
    },
    "version": "3.0.0"
  },
  "paths": {
    "/api/AccessGroups": {
      "get": {
        "tags": [
          "AccessGroups"
        ],
        "summary": "Gets all general access groups",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccessGroup"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccessGroup"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccessGroup"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AccessGroups"
        ],
        "summary": "Create a new Access Group from JSON object provided.Returns JSON object representing created Access Group.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessGroupRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessGroupRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AccessGroupRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AccessGroupRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/AccessGroupRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/AccessGroupRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessGroup"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccessGroup"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccessGroup"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/AccessGroups/{id}": {
      "get": {
        "tags": [
          "AccessGroups"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccessGroup"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccessGroup"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccessGroup"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/AccessGroups/members/{id}": {
      "get": {
        "tags": [
          "AccessGroups"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccessGroup"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccessGroup"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccessGroup"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Departments": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "Gets all departments",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Department"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Department"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Department"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Departments"
        ],
        "summary": "Create a new Department from JSON object provided.Returns JSON object representing created department.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Departments/{id}": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "Returns single department",
        "operationId": "department",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Departments"
        ],
        "summary": "Updates department with data from JSON object provided.\r\nAll values from JSON object updates stored object.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Departments/{id}/deactivate": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "set final date for department",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Departments/{id}/activate": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "Activates department by setting final date to [null]",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Gets all users defined in the system user limit=x&offset=n to paginate\r\nTo include email,access and roles, use following parameters\r\n&includeEmailAddresses=true&includeUserAccess=true&includeRoles=true",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Limit reponse to x rows",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10000
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "offset reponse rows",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "includeEmailAddresses",
            "in": "query",
            "description": "bool to include or exclude user email addresses",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeUserAccess",
            "in": "query",
            "description": "bool to include or exclude user access information",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeRoles",
            "in": "query",
            "description": "bool to include or exclude roles assigned to user",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebsakUser"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebsakUser"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebsakUser"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Error fetching data"
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a new WebsakUser from JSON object provided.Returns JSON object representing created user.",
        "description": "Creates a Websak user based on the JSON data provided in the request.<br />\r\nExternalDepartmentID – External department id, this value will be matched against misc1 for lookup value. <br />\r\nDepartmentCode - Department code => value will be matched against Department unit code. ExternalDepartmentID is then disregarded.\r\nTilgangsOppsettID – ID for template for the user being created, the user gets access and roles based on this template. <br />\r\nLookupField - Name of field that is used to lookup existing user.<br />\r\nParameters: JSON Data object Acos.Websak.UserAPI.Core.Models.UserRequest<br />",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created json object with new/updated user, and the GET url to user api/user/{newId}. <br />",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsakUser"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebsakUser"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebsakUser"
                }
              }
            }
          },
          "200": {
            "description": "Object with updated user, and the GET url to user api/user/{newId}. <br />",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsakUser"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebsakUser"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebsakUser"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error with message."
          }
        }
      }
    },
    "/api/Users/changes/{fromDate}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns a list of websak users changed after supplied date",
        "parameters": [
          {
            "name": "fromDate",
            "in": "path",
            "description": "Returns users changed after this date, format YYYY-MM-DD",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Changed users since {fromDate}",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebsakUser"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebsakUser"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebsakUser"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "No changes since {fromDate}"
          },
          "400": {
            "description": "{fromDate} is incorrectly formatted"
          }
        }
      }
    },
    "/api/Users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns a single websak user",
        "description": "Gets one singe user. <br /><p>Parameter {id}: Value can be of gid id or username.</p>\r\nReturn values: One JSON object containing data for requested user.",
        "operationId": "users",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User AD string identifier or login id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsakUser"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebsakUser"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebsakUser"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Updates websak user with data from JSON object provided.<br />\r\nAll values from JSON object updates stored object.<br />",
        "description": "Updates user based on values in JSON object in request. Values in the request will be mapped to Websak user.<br />\r\nValues not included in JSON will be translated either to \"\" (empty string) or [null].<br />\r\nSide effect: Not included properties will <strong>cause</strong> date to be deleted/overwritten.<br />\r\nInclude all data always. <br />\r\nIf external department and/or access is changed, then current access are reset to new access profile.<br />\r\nReturn values : 200 OK - User Created/Updated. <br />\r\n404 - Unknown user<br />\r\n500 - Error message contains more details<br />",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsakUser"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebsakUser"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebsakUser"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/{id}/Deactivate": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Deactivate websak user by setting expiration date to yesterday",
        "description": "Activates or deactivates a user<br /><p>User will be deactivated immedately by setting profile date to yesterday.</p>\r\nParameter {id} : Username <br />\r\n   Return values : http response OK/NotFound with status message, or internalserver error + exception <br />",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User AD string identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/{id}/Activate": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Activates websak user by setting expiration date to [null]",
        "description": "Activates a user.<br /><p>User is immedately activated by removing expiration date from profile.</p>\r\nParametere {id} : ADBrukernavn <br />\r\n   Return values : http response OK/NotFound with status message, or internalserver error + exception <br />",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User AD string identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/{id}/AddUserToAccessGroup/{accessGroupId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Add user to provided access group.",
        "description": "Adds the user to provided access group. Access group id must already be defined in system.<br />\r\nParameter {id} – ADBrukernavn <br />\r\n   Parameter {accessGroupId} – Websak access group ID <br />\r\n   Return values : 200 OK, 500 + error message. <br />",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User AD string identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accessGroupId",
            "in": "path",
            "description": "Access group id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/{id}/AccessGroupMembership": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List the named accessgroups a user is member of.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "GidID for the User",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccessGroup"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccessGroup"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccessGroup"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/{id}/AddUserToAccessGroupByGroupName/{accessGroupName}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Add user to provided access group.",
        "description": "Adds the user to provided access group. Access group name must already be defined in system.<br />\r\nParameter {id} – ADBrukernavn <br />\r\n   Parameter {accessGroupName} – Websak access group name <br />\r\n   Return values : 200 OK, 500 + error message. <br />",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User AD string identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accessGroupName",
            "in": "path",
            "description": "Access group id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/{id}/RemoveUserFromAccessGroup/{accessGroupId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Removes user from access group",
        "description": "Removes a user from provided access group. Access group id must be defined in the system.<br />\r\nParameter {id} – AD Username <br />\r\n   Parameter {accessGroupId} – Websak access group ID <br />\r\n   Return values: 200 OK, 500 + error message. <br />",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User AD string identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accessGroupId",
            "in": "path",
            "description": "Access group id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/{id}/RemoveUserFromAccessGroupName/{accessGroupName}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Removes user from access group",
        "description": "Removes a user from provided access group. Access group id must be defined in the system.<br />\r\nParameter {id} – AD Username <br />\r\n   Parameter {accessGroupName} – Websak access group name <br />\r\n   Return values: 200 OK, 500 + error message. <br />",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User AD string identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accessGroupName",
            "in": "path",
            "description": "Access group id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/{id}/AddUserAsPostDistributor/{orgUnitId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Add user to departement mail distribute group if it exists.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User AD string identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orgUnitId",
            "in": "path",
            "description": "departement id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/{id}/RemoveUserAsPostDistributor/{orgUnitId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Remove user from departement mail distribute group",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User AD string identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orgUnitId",
            "in": "path",
            "description": "departement id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Zones": {
      "get": {
        "tags": [
          "Zones"
        ],
        "summary": "Gets all Environments and zone",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebsakEnvironment"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebsakEnvironment"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebsakEnvironment"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccessFunction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AccessGroup": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "nullable": true
          },
          "groupName": {
            "type": "string",
            "nullable": true
          },
          "general": {
            "type": "string",
            "nullable": true
          },
          "createdById": {
            "type": "string",
            "nullable": true
          },
          "fromDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "toDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AccessGroupRequest": {
        "type": "object",
        "properties": {
          "groupName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Department": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "externalId": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "parentDepartmentId": {
            "type": "string",
            "nullable": true
          },
          "abbreviation": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "unit": {
            "type": "string",
            "nullable": true
          },
          "group": {
            "type": "string",
            "nullable": true
          },
          "validFromDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "validToDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "journalUnitId": {
            "type": "string",
            "nullable": true
          },
          "archiveUnit": {
            "type": "string",
            "nullable": true
          },
          "managerUserId": {
            "type": "string",
            "nullable": true
          },
          "level": {
            "type": "string",
            "nullable": true
          },
          "gidId": {
            "type": "string",
            "nullable": true
          },
          "mailDistributionGroup": {
            "type": "string",
            "nullable": true
          },
          "intralink": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DepartmentRequest": {
        "type": "object",
        "properties": {
          "departmentName": {
            "type": "string",
            "nullable": true
          },
          "departmentShortName": {
            "type": "string",
            "nullable": true
          },
          "departmentId": {
            "type": "string",
            "nullable": true
          },
          "departmentParentId": {
            "type": "string",
            "nullable": true
          },
          "departmentHeadId": {
            "type": "string",
            "nullable": true
          },
          "externalID": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "UserAccess": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string",
            "description": "User domain for login => used for 8.x versions",
            "nullable": true
          },
          "provider": {
            "type": "string",
            "description": "Used to set provider for login details.",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "isPrimary": {
            "type": "boolean",
            "description": "defines if users login detail is primary\r\nDefaults to true if not set."
          },
          "id": {
            "type": "integer",
            "description": "The users given Id",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "UserRequest": {
        "type": "object",
        "properties": {
          "accessTemplateId": {
            "type": "string",
            "description": "This is user profile",
            "nullable": true
          },
          "nationalNo": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "countryId": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "postalNo": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "contact": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "addr": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "addr2": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "phone2": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "mobile": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "emailAddr": {
            "type": "string",
            "description": "This is obsolete - collected from emailaddr in gia.",
            "nullable": true
          },
          "emailAddr2": {
            "type": "string",
            "description": "Redunant - see Acos.Websak.UserAPI.Core.Models.WebsakUserBase.EmailAddr.",
            "nullable": true
          },
          "languageId": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "departmentId": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "note": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "place": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "municipalityNo": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "visitingAddress": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "misc1": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "misc2": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "misc3": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "misc4": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "misc5": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "addr3": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "addr4": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "leaveFrom": {
            "type": "string",
            "description": "",
            "format": "date-time",
            "nullable": true
          },
          "leaveTo": {
            "type": "string",
            "description": "",
            "format": "date-time",
            "nullable": true
          },
          "categoryId": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "userAccessCodes": {
            "type": "string",
            "nullable": true
          },
          "userAccessFunctions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessFunction"
            },
            "nullable": true
          },
          "userRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRole"
            },
            "nullable": true
          },
          "username": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "externalDepartmentId": {
            "type": "string",
            "description": "Departmentname: Mapped agains misc1",
            "nullable": true
          },
          "departmentCode": {
            "type": "string",
            "description": "Assign user to department by using department code (SOA_AdmKort) \r\nCode will be used to find department in which new user is assigned.",
            "nullable": true
          },
          "mailAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "gid_gidid",
            "nullable": true
          },
          "lookupField": {
            "type": "string",
            "description": "Use this to set lookup field in user",
            "nullable": true
          },
          "userType": {
            "type": "string",
            "description": "B=>User,  P => Profile",
            "nullable": true
          },
          "userAccesses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserAccess"
            },
            "nullable": true
          },
          "accessToZones": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Zones for User. set to null or empty to use default zone from db.\r\nAvailable zones can be fetched from [get]://api/zones",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "UserRole": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "roleUserId": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "departmentList": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "archiveList": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "journalUnitList": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "gradeList": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Is not returned today."
      },
      "WebsakEnvironment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "referenceId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "zone": {
            "$ref": "#/components/schemas/Zone"
          }
        },
        "additionalProperties": false
      },
      "WebsakUser": {
        "type": "object",
        "properties": {
          "accessTemplateId": {
            "type": "string",
            "description": "This is user profile",
            "nullable": true
          },
          "nationalNo": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "title": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "countryId": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "postalNo": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "contact": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "addr": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "addr2": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "phone2": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "mobile": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "emailAddr": {
            "type": "string",
            "description": "This is obsolete - collected from emailaddr in gia.",
            "nullable": true
          },
          "emailAddr2": {
            "type": "string",
            "description": "Redunant - see Acos.Websak.UserAPI.Core.Models.WebsakUserBase.EmailAddr.",
            "nullable": true
          },
          "languageId": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "departmentId": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "departmentCode": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "note": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "place": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "municipalityNo": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "visitingAddress": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "misc1": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "misc2": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "misc3": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "misc4": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "misc5": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "addr3": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "addr4": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "leaveFrom": {
            "type": "string",
            "description": "",
            "format": "date-time",
            "nullable": true
          },
          "leaveTo": {
            "type": "string",
            "description": "",
            "format": "date-time",
            "nullable": true
          },
          "categoryId": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "userAccessCodes": {
            "type": "string",
            "nullable": true
          },
          "userAccessFunctions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessFunction"
            },
            "nullable": true
          },
          "userRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRole"
            },
            "nullable": true
          },
          "gidId": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "externalUsername": {
            "type": "string",
            "description": "[Obsolete]",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": ""
          },
          "orgUnitId": {
            "type": "string",
            "description": "",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Zone": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "writeProtected": {
            "type": "boolean"
          },
          "isSensitive": {
            "type": "boolean"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "authorizationUrl": "https://erlend5570.intern.acos.no:5007/",
            "tokenUrl": "https://erlend5570.intern.acos.no:5007/connect/token",
            "scopes": {
              "userapi": "User API"
            }
          }
        }
      },
      "bearer": {
        "type": "http",
        "description": "Please enter JWT into field",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearer": [ ],
      "oauth2": [ ]
    }
  ]
}