{
  "openapi": "3.0.1",
  "info": {
    "title": "User API",
    "description": "User API - For creating and updating users.",
    "contact": {
      "name": "Acos AS",
      "url": "http://wwww.acos.no/",
      "email": "utvikling@acos.no"
    },
    "version": "1.0.0"
  },
  "paths": {
    "/api/AccessGroups": {
      "get": {
        "tags": [
          "AccessGroups"
        ],
        "summary": "Gets all general access groups",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccessGroup"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccessGroup"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccessGroup"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccessGroup"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccessGroup"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Departments": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "Gets all departments",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Department"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Department"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Department"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Department"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Department"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Departments"
        ],
        "summary": "Create a new Department from JSON object provided.Returns JSON object representing created department.",
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            }
          }
        }
      }
    },
    "/api/Departments/{id}": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "Returns single department",
        "operationId": "department",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Departments"
        ],
        "summary": "Updates department with data from JSON object provided.\r\nAll values from JSON object updates stored object.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentRequest"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentRequest"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            }
          }
        }
      }
    },
    "/api/Departments/{id}/deactivate": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "set final date for department",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Departments/{id}/activate": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "Activates department by setting final date to [null]",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Gets all users defined in the system",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebsakUser"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebsakUser"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error fetching data"
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a new WebsakUser from JSON object provided.Returns JSON object representing created user.",
        "description": "Creates a Websak user based on the JSON data provided in the request.\r\nEksternAvdelingID – External department id, this value will be matched against DIV1 for lookup value.  <br />\r\nTilgangsOppsettID – ID for template for the user being created, the user gets access and roles based on this template. <br />\r\nLookupField - Name of field that is used to lookup existing user.<br />\r\nParameters: JSON Data object <br />",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created json object with new/updated user, and the GET url to user api/user/{NyId}. <br />",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsakUser"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebsakUser"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error with message."
          }
        }
      }
    },
    "/api/Users/changes/{fromDate}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns a list of websak users changed after supplied date",
        "parameters": [
          {
            "name": "fromDate",
            "in": "path",
            "description": "Returns users changed after this date, format YYYY-MM-DD",
            "required": true,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Changed users since {fromDate}",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebsakUser"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebsakUser"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No changes since {fromDate}"
          },
          "400": {
            "description": "{fromDate} is incorrectly formatted"
          }
        }
      }
    },
    "/api/Users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns a single websak user",
        "description": "Gets one singe user. <br /><p>Parameter {id}: Value can be of gid id or username.</p>\r\nReturn values: One JSON object containing data for requested user.",
        "operationId": "users",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User AD string identifier or login id",
            "required": true,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsakUser"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebsakUser"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Updates websak user with data from JSON object provided.\r\nAll values from JSON object updates stored object.",
        "description": "Updates user based on values in JSON object in request. Values in the request will be mapped to Websak user.<br />\r\nValues not included in JSON will be translated either to \"\" (empty string) or [null].\r\nSide effect: Not included properties will *cause* date to be deleted/overwritten.\r\nInclude all data always. \r\nIf eksternal department and/or access is changed, then current access are reset to new access profile.\r\nReturn values : 200 OK - User Created/Updated. <br />\r\n404 - Unknown user<br />\r\n500 - Error message contains more details<br />",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsakUser"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/WebsakUser"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/{id}/Deactivate": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Deactivate websak user by setting expiration date to yesterday",
        "description": "Activates or deactivates a user<br /><p>User will be deactivated immedate by setting profile date to yesterday.</p>\r\nParameter {id} : Username <br />\r\n   Return values : http response OK/NotFound with status message, or internalserver error + exception <br />",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User AD string identifier",
            "required": true,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/{id}/Activate": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Activates websak user by setting expiration date to [null]",
        "description": "Activates a user.<br /><p>User is immedately activated by removing expiration date from profile.</p>\r\nParametere {id} : ADBrukernavn <br />\r\n   Return verdier : http response OK/NotFound with status message, or internalserver error + exception <br />",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User AD string identifier",
            "required": true,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/{id}/AddUserToAccessGroup/{accessGroupId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Add user to provided access group.",
        "description": "Adds the user to provided access group. Access group id must already be defined in system.<br />\r\nParameter {id} – ADBrukernavn <br />\r\n   Parameter {accessGroupId} – Websak access group ID <br />\r\n   Return values : 200 OK, 500 + error message. <br />",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User AD string identifier",
            "required": true,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "accessGroupId",
            "in": "path",
            "description": "Access group id",
            "required": true,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/{id}/RemoveUserFromAccessGroup/{accessGroupId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Removes user from access group",
        "description": "Removes a user from provided access group. Access group id must be defined in the system.\r\nParameter {id} – AD Username <br />\r\n   Parameter {accessGroupId} – Websak access group ID <br />\r\n   Return values: 200 OK, 500 + error message. <br />",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User AD string identifier",
            "required": true,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "accessGroupId",
            "in": "path",
            "description": "Access group id",
            "required": true,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/{id}/AddUserAsPostDistributor/{orgUnitId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Add user to departement mail distribute group if it exists.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User AD string identifier",
            "required": true,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "orgUnitId",
            "in": "path",
            "description": "departement id",
            "required": true,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Users/{id}/RemoveUserAsPostDistributor/{orgUnitId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Remove user from departement mail distribute group",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User AD string identifier",
            "required": true,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "orgUnitId",
            "in": "path",
            "description": "departement id",
            "required": true,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/xml": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Zones": {
      "get": {
        "tags": [
          "Zones"
        ],
        "summary": "Gets all Environments and zone",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebsakEnvironment"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebsakEnvironment"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebsakEnvironment"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebsakEnvironment"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebsakEnvironment"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccessGroup": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string"
          },
          "groupName": {
            "type": "string"
          },
          "general": {
            "type": "string"
          },
          "createdById": {
            "type": "string"
          },
          "fromDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "toDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Department": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "parentDepartmentId": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "unit": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "validFromDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "validToDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "journalUnitId": {
            "type": "string"
          },
          "archiveUnit": {
            "type": "string"
          },
          "managerUserId": {
            "type": "string"
          },
          "level": {
            "type": "string"
          },
          "gidId": {
            "type": "string"
          },
          "mailDistributionGroup": {
            "type": "string"
          },
          "intralink": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "DepartmentRequest": {
        "type": "object",
        "properties": {
          "departmentName": {
            "type": "string"
          },
          "departmentShortName": {
            "type": "string"
          },
          "departmentId": {
            "type": "string"
          },
          "departmentParentId": {
            "type": "string"
          },
          "departmentHeadId": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "AccessFunction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UserRole": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "string",
            "description": ""
          },
          "roleUserId": {
            "type": "string",
            "description": ""
          },
          "departmentList": {
            "type": "string",
            "description": ""
          },
          "archiveList": {
            "type": "string",
            "description": ""
          },
          "journalUnitList": {
            "type": "string",
            "description": ""
          },
          "gradeList": {
            "type": "string",
            "description": ""
          },
          "id": {
            "type": "string",
            "description": ""
          },
          "description": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": "Is not returned today."
      },
      "WebsakUser": {
        "type": "object",
        "properties": {
          "gidId": {
            "type": "string",
            "description": ""
          },
          "externalUsername": {
            "type": "string",
            "description": "På vei ut. Må erstattes med noe lurt til websak 8  her bruker vi jo glm_loginmapping. Feltet må også skifte navn. ExternalUserId?"
          },
          "active": {
            "type": "boolean",
            "description": ""
          },
          "orgUnitId": {
            "type": "string",
            "description": ""
          },
          "nationalNo": {
            "type": "string",
            "description": ""
          },
          "code": {
            "type": "string",
            "description": ""
          },
          "name": {
            "type": "string",
            "description": ""
          },
          "title": {
            "type": "string",
            "description": ""
          },
          "countryId": {
            "type": "string",
            "description": ""
          },
          "postalNo": {
            "type": "string",
            "description": ""
          },
          "contact": {
            "type": "string",
            "description": ""
          },
          "addr": {
            "type": "string",
            "description": ""
          },
          "addr2": {
            "type": "string",
            "description": ""
          },
          "phone": {
            "type": "string",
            "description": ""
          },
          "phone2": {
            "type": "string",
            "description": ""
          },
          "mobile": {
            "type": "string",
            "description": ""
          },
          "emailAddr": {
            "type": "string",
            "description": "Denne er obsolete - hentes fra emailadr i gia."
          },
          "emailAddr2": {
            "type": "string",
            "description": "Redundant - se over."
          },
          "languageId": {
            "type": "string",
            "description": ""
          },
          "departmentId": {
            "type": "string",
            "description": ""
          },
          "accountNumber": {
            "type": "string",
            "description": ""
          },
          "note": {
            "type": "string",
            "description": ""
          },
          "place": {
            "type": "string",
            "description": ""
          },
          "municipalityNo": {
            "type": "string",
            "description": ""
          },
          "visitingAddress": {
            "type": "string",
            "description": ""
          },
          "misc1": {
            "type": "string",
            "description": ""
          },
          "misc2": {
            "type": "string",
            "description": ""
          },
          "misc3": {
            "type": "string",
            "description": ""
          },
          "misc4": {
            "type": "string",
            "description": ""
          },
          "misc5": {
            "type": "string",
            "description": ""
          },
          "addr3": {
            "type": "string",
            "description": ""
          },
          "addr4": {
            "type": "string",
            "description": ""
          },
          "leaveFrom": {
            "type": "string",
            "description": "",
            "format": "date-time",
            "nullable": true
          },
          "leaveTo": {
            "type": "string",
            "description": "",
            "format": "date-time",
            "nullable": true
          },
          "categoryId": {
            "type": "string",
            "description": ""
          },
          "userAccessCodes": {
            "type": "string"
          },
          "userAccessFunctions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessFunction"
            }
          },
          "userRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRole"
            }
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "UserAccess": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string",
            "description": "User domain for login =&gt; used for 8.x versions"
          },
          "provider": {
            "type": "string",
            "description": "Used to set provider for login details."
          },
          "key": {
            "type": "string"
          },
          "isPrimary": {
            "type": "boolean",
            "description": "defines if users login detail is primary\r\nDefaults to true if not set."
          },
          "id": {
            "type": "integer",
            "description": "The users given Id",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "UserRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": ""
          },
          "externalDepartmentId": {
            "type": "string",
            "description": "Avdelingsnavn som mappes mot gid_div1 from soa_Avdeling join gid_identitet on soa_gidid = gid_gidid"
          },
          "accessTemplateId": {
            "type": "string",
            "description": "Dette er profilen til brukeren - gid_gidid/sbr_brukerid"
          },
          "mailAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          },
          "id": {
            "type": "string",
            "description": "gid_gidid"
          },
          "lookupField": {
            "type": "string",
            "description": "Man kan bruke dette for å gjenfinne en bruker gitt angitt felt i gid"
          },
          "userType": {
            "type": "string",
            "description": "B dersom bruker, P dersom profil"
          },
          "userAccesses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserAccess"
            }
          },
          "accessToZones": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Zones for User. set to null or empty to use default zone from db.\r\nAvailable zones can be fetched from [get]://api/zones"
          },
          "nationalNo": {
            "type": "string",
            "description": ""
          },
          "code": {
            "type": "string",
            "description": ""
          },
          "name": {
            "type": "string",
            "description": ""
          },
          "title": {
            "type": "string",
            "description": ""
          },
          "countryId": {
            "type": "string",
            "description": ""
          },
          "postalNo": {
            "type": "string",
            "description": ""
          },
          "contact": {
            "type": "string",
            "description": ""
          },
          "addr": {
            "type": "string",
            "description": ""
          },
          "addr2": {
            "type": "string",
            "description": ""
          },
          "phone": {
            "type": "string",
            "description": ""
          },
          "phone2": {
            "type": "string",
            "description": ""
          },
          "mobile": {
            "type": "string",
            "description": ""
          },
          "emailAddr": {
            "type": "string",
            "description": "Denne er obsolete - hentes fra emailadr i gia."
          },
          "emailAddr2": {
            "type": "string",
            "description": "Redundant - se over."
          },
          "languageId": {
            "type": "string",
            "description": ""
          },
          "departmentId": {
            "type": "string",
            "description": ""
          },
          "accountNumber": {
            "type": "string",
            "description": ""
          },
          "note": {
            "type": "string",
            "description": ""
          },
          "place": {
            "type": "string",
            "description": ""
          },
          "municipalityNo": {
            "type": "string",
            "description": ""
          },
          "visitingAddress": {
            "type": "string",
            "description": ""
          },
          "misc1": {
            "type": "string",
            "description": ""
          },
          "misc2": {
            "type": "string",
            "description": ""
          },
          "misc3": {
            "type": "string",
            "description": ""
          },
          "misc4": {
            "type": "string",
            "description": ""
          },
          "misc5": {
            "type": "string",
            "description": ""
          },
          "addr3": {
            "type": "string",
            "description": ""
          },
          "addr4": {
            "type": "string",
            "description": ""
          },
          "leaveFrom": {
            "type": "string",
            "description": "",
            "format": "date-time",
            "nullable": true
          },
          "leaveTo": {
            "type": "string",
            "description": "",
            "format": "date-time",
            "nullable": true
          },
          "categoryId": {
            "type": "string",
            "description": ""
          },
          "userAccessCodes": {
            "type": "string"
          },
          "userAccessFunctions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessFunction"
            }
          },
          "userRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRole"
            }
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "Zone": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "writeProtected": {
            "type": "boolean"
          },
          "isSensitive": {
            "type": "boolean"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WebsakEnvironment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "referenceId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "zone": {
            "$ref": "#/components/schemas/Zone"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Please enter JWT with Bearer into field",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    { }
  ]
}